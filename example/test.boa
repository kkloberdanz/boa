#!/usr/bin/env boa
#
#   This is an exemple of a boa program
#   Collatz Conjecture, see: https://en.wikipedia.org/wiki/Collatz_conjecture
#

true = 0 == 0
false = 1 == 0

collatz = n => {
    print(n)
    if n == 1: -> 1
    else if n % 2 == 0: -> collatz(n / 2)
    else -> collatz(3 * n + 1)
}

gcd = a, b => {
    if b == 0: -> a
    else -> gcd(b, a % b)
}

make_even = n => {
    if n % 2 == 0: -> n else -> n + 1
}

compare = a, b => {
    if a == b: -> 0
    else if a < b: -> (0 - 1)
    else -> 1 # a > b
}

func = x, y => {
    a = x + y
    if a < 10:
        b = x - y
        c = b + a
        -> c - 100
    else -> a
}

ackermann = m, n => {
    if m == 0:
        -> n + 1
    else if n == 0:
        -> ackermann(m - 1, 1)
    else
        n2 = ackermann(m, n - 1)
        -> ackermann(m - 1, n2)
}

print(collatz(1000))

print(make_even(1111))

print(compare(1, 2))
print(compare(1, 1))
print(compare(9, 7))

print(0)
print(gcd(9, 12))
print(func(1, 3))
print(func(11, 3))
print(ackermann(3, 4))
print(ackermann(3, 8))

xyz = true
print(xyz)
print(xyz == false)
