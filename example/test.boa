#!/usr/bin/env boa

True = 0 == 0
False = 1 == 0

gcd = a, b => {
    if b == 0: -> a
    else -> gcd(b, a % b)
}

make_even = n => {
    if n % 2 == 0: -> n else -> n + 1
}

compare = a, b => {
    if a == b: -> 0
    else if a < b: -> -1
    else -> 1 # a > b
}

func = x, y => {
    a = x + y
    if a < 10:
        b = x - y
        c = b + a
        -> c - 100
    else -> a
}

ackermann = m, n => {
    if m == 0:
        -> n + 1
    else if n == 0:
        -> ackermann(m - 1, 1)
    else
        n2 = ackermann(m, n - 1)
        -> ackermann(m - 1, n2)
}

reassign = x => {
    y = 0
    if x > 0:
        y = 14
    else
        y = 16
    -> y
}

println(make_even(1111))

println(compare(1, 2))
println(compare(1, 1))
println(compare(9, 7))

println(0)
println(gcd(9, 12))
println(func(1, 3))
println(func(11, 3))
println(ackermann(3, 4))
println(ackermann(3, 8))

xyz = True
println(xyz)
n = println(xyz == False)
println(n)
println(-123 + 3)

l = []
println(l)

l2 = [1, 2, 3]
println(l2)

l3 = [1 + 2, 3 * 4, 6 / 2]
println(l3)

println(reassign(2))
println(reassign(-2))
